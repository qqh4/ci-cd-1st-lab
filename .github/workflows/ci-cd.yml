name: CI/CD Pipeline with SAST

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8
        run: |
          flake8 --max-line-length=88 > flake8_report.txt || true

      - name: Upload flake8 artifact
        uses: actions/upload-artifact@v4
        with:
          name: flake8-report
          path: flake8_report.txt

      - name: Run Bandit SAST Scan
        run: |
          python -m pip install --upgrade pip
          pip install bandit
          sudo apt-get update -y && sudo apt-get install -y jq || true
          bandit -r . -f json -o bandit_results.json || true

      - name: Annotate Bandit findings in GitHub Actions
        if: always()
        run: |
          if [ -f bandit_results.json ]; then
            echo "üìÑ Generating inline annotations from Bandit results..."
            jq -r '.results[] | "::warning file=\(.filename),line=\(.line_number)::[\(.issue_severity)] \(.issue_text)"' bandit_results.json || true
          else
            echo "‚ö†Ô∏è Bandit results not found."
          fi

      - name: Upload Bandit report artifact
        uses: actions/upload-artifact@v4
        with:
          name: bandit-results
          path: bandit_results.json

      - name: Check Bandit Results
        id: bandit-check
        run: |
          if [ -f bandit_results.json ]; then
            if jq -e '.results[] | select(.issue_confidence == "HIGH" and .issue_severity == "HIGH")' bandit_results.json > /dev/null; then
              echo "‚ùå Bandit found critical vulnerabilities! Failing the pipeline."
              exit 1
            else
              echo "‚úÖ No critical HIGH+HIGH vulnerabilities found by Bandit."
            fi
          else
            echo "‚ö†Ô∏è Bandit report not found. Assuming no issues."
          fi

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Run Tests with pytest
        run: |
          python -m pytest tests/ -v

  build:
    name: Build source distribution (.tar.gz)
    runs-on: ubuntu-latest
    needs: security-scan
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools

      - name: Build source distribution (.tar.gz only)
        run: |
          python setup.py sdist
          ls -la dist/

      - name: Upload build artifact (.tar.gz)
        uses: actions/upload-artifact@v4
        with:
          name: python-source-dist
          path: dist/*.tar.gz
